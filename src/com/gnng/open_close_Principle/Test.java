package com.gnng.open_close_Principle;

/**
 * 开放-封闭原则
 * 1.软件实体（类、模块、函数等等）应该可以扩展，但不可以修改
 * 2.对扩展是开放的，对修改是封闭的（保证面对需求的改变保持相对的稳定，可以使得系统在第一个版本以后不断的推出新的版本）
 * 3.在编写代码的时候，假设变化不会发生。当变化发生，我们就创建抽象来隔离以后发生的同类变化
 * 4.面对需求，对程序的改动是增加新的代码，而不是更改现有的代码
 * 5.开放-封闭原则是面向对象设计的核心所在，遵循这个原则可以带来面向对象的巨大好处
 * @author gnng
 *
 */
public class Test {

}
